{"version":3,"sources":["images/image.png","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Cards/Cards.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","cx","box","infected","category","number","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","defaults","global","defaultFontColor","defaultColor","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","options","scales","yAxes","gridLines","color","xAxes","zeroLineColor","barChart","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e0ce69c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nimport styles from \"./Cards.module.css\";\r\n\r\nconst Cards = ({ data : { confirmed, recovered, deaths, lastUpdate } }) => {\r\n    if (!confirmed) {\r\n        return 'Loading';\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={styles.container}>\r\n                <div className={cx(styles.box, styles.infected)}>\r\n                    <div className={styles.category}>Infected</div>\r\n                    <div className={styles.number}><CountUp start={0} end={confirmed.value} duration={2} separator=\",\" /></div>\r\n                </div>\r\n                <div className={cx(styles.box, styles.recovered)}>\r\n                    <div className={styles.category}>Recovered</div>\r\n                    <div className={styles.number}><CountUp start={0} end={recovered.value} duration={2} separator=\",\" /></div>\r\n                </div>\r\n                <div className={cx(styles.box, styles.deaths)}>\r\n                    <div className={styles.category}>Deaths</div>\r\n                    <div className={styles.number}><CountUp start={0} end={deaths.value} duration={2} separator=\",\" /></div>\r\n                </div>\r\n            </div>\r\n            <p>Last updated: {new Date(lastUpdate).toDateString()}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;\r\n\r\n\r\n{/* <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" /> */}","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n\r\n    if (country) {\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n        \r\n        const modifiedData = data.map(dailyData => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate\r\n        }));\r\n\r\n        return modifiedData;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries }} = await axios.get(`${url}/countries`);\r\n        return countries.map(country => country.name);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar, defaults } from \"react-chartjs-2\";\r\n\r\nimport styles from \"./Chart.module.css\";\r\nimport { findRenderedComponentWithType } from \"react-dom/test-utils\";\r\n\r\ndefaults.global.defaultFontColor = 'white'\r\ndefaults.global.defaultColor = 'white'\r\n\r\nconst Chart = ({ data: { confirmed, deaths, recovered }, country }) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData()); \r\n        }\r\n\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n        ? (\r\n        <Line \r\n            data={{\r\n                labels: dailyData.map(({ date }) => date),\r\n                datasets: [{\r\n                    data: dailyData.map(({ confirmed }) => confirmed),\r\n                    label: \"Infected\",\r\n                    borderColor: \"#3333ff\",\r\n                    fill: true\r\n                }, {\r\n                    data: dailyData.map(({ deaths }) => deaths),\r\n                    label: \"Deaths\",\r\n                    borderColor: \"red\",\r\n                    backgroundColor: \"rgba(255, 0, 0, 0.5)\"\r\n                }],\r\n            }}\r\n            options={{\r\n                scales: {\r\n                    yAxes: [{gridLines: {color: \"#666666\"}}],\r\n                    xAxes: [{gridLines: {color: \"#666666\", zeroLineColor: \"#white\"}}]\r\n                }\r\n            }}\r\n        />) : null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed\r\n            ? (\r\n                <Bar \r\n                    data= {{\r\n                        labels: [\"Infected\", \"recovered\", \"Deaths\"],\r\n                        datasets: [{\r\n                            label: \"People\",\r\n                            backgroundColor: [\r\n                                'rgba(0, 0, 255, 0.5)',\r\n                                'rgba(0, 255, 0, 0.5)',\r\n                                'rgba(255, 0, 0, 0.5)'\r\n                            ],\r\n                            data: [confirmed.value, recovered.value, deaths.value]\r\n                        }]\r\n                    }}\r\n                    options={{\r\n                        legend: { display: false },\r\n                        title: { display: true, text:`Current state in ${country}`},\r\n                        scales: {     \r\n                            yAxes: [{gridLines: {color: \"#666666\", zeroLineColor: \"white\"}}]\r\n                    }}\r\n                    }\r\n                />\r\n            ) : null\r\n    );\r\n\r\n\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, {useState, useEffect} from \"react\";\r\nimport { NativeSelect, FormControl} from \"@material-ui/core\";\r\nimport { fetchCountries } from \"../../api\";\r\n\r\nimport styles from \"./CountryPicker.module.css\";\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI  = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from \"react\";\r\n\r\nimport { Cards, Chart, CountryPicker } from \"./components\";\r\nimport styles from \"./App.module.css\";\r\nimport { fetchData } from \"./api\";\r\n\r\nimport coronaImage from \"./images/image.png\";\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n        country: ''\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState({data: fetchedData});\r\n    }\r\n    \r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n        console.log(fetchedData);\r\n        this.setState({data: fetchedData, country: country});\r\n    }\r\n\r\n    render() {\r\n        const { data, country } = this.state;\r\n\r\n        return (\r\n            <div className={styles.container}>\r\n                <h1>COVID-19</h1>\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country} />            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2vPl3\",\"box\":\"Cards_box__11qlO\",\"category\":\"Cards_category__2XDYR\",\"number\":\"Cards_number__2X36S\",\"infected\":\"Cards_infected__TmuJ6\",\"recovered\":\"Cards_recovered__3IEnj\",\"deaths\":\"Cards_deaths__34Jd-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__25WfR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3l3pn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1unam\",\"image\":\"App_image__PaF4T\"};"],"sourceRoot":""}